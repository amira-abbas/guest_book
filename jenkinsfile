pipeline {
    agent any
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials-id')
        IMAGE_NAME = "amira-abbas/guestbook"
    }
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', 
                    credentialsId: 'github-credentials-id', 
                    url: 'https://github.com/amira-abbas/guest_book.git'
            }
        }
        stage('Build') {
            steps {
                sh 'docker build -t ${IMAGE_NAME}:latest .'
            }
        }
        stage('Test') {
            steps {
                sh '''
                docker network create test-net
                docker run -d --name db-test --network test-net -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=guest_book postgres:14-alpine
                sleep 5
                docker run --rm --network test-net -e DATABASE_URL=postgresql://postgres:postgres@db-test:5432/guest_book ${IMAGE_NAME}:latest sh -c "flask db upgrade && pytest tests/"
                '''
            }
            post {
                always {
                    sh 'docker stop db-test || true'
                    sh 'docker rm db-test || true'
                    sh 'docker network rm test-net || true'
                }
            }
        }
        stage('Push') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                sh 'docker push ${IMAGE_NAME}:latest'
            }
        }
        stage('Deploy') {
            steps {
                sh 'docker compose up -d --build'
            }
        }
    }
    post {
        always {
            sh 'docker logout'
        }
    }
}
